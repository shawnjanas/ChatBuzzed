load("netservices.asc");
load("SchoolHandler.asc");
load("AMFPHPResult.asc");

application.onAppStart = function() {
	trace("The application has started up");
	application.audioSampleAccess = "*";
	application.videoSampleAccess = "*";
	
	NetServices.setDefaultGatewayUrl("http://www.chatbuzzed.com/amfphp/gateway.php");
    this.gatewayconn = NetServices.createGatewayConnection();
	
	this.newUsers = new Object();
	this.schoolHandler = new SchoolHandler();
	this.schoolHandler.createSchool("McMaster University");
	
	this.uID = 0;
}

application.onConnect = function(clientObj,status) {
	
	if(clientObj.referrer == "http://www.chatbuzzed.com/ClientLoader.swf" || clientObj.referrer == "http://chatbuzzed.com/ClientLoader.swf" ||
	  	clientObj.referrer == "http://www.chatbuzzed.com/Client.swf" || clientObj.referrer == "http://chatbuzzed.com/Client.swf" || 
		clientObj.referrer == "http://www.chatbuzzed.com/cbV2/ClientLoader.swf" || clientObj.referrer == "http://chatbuzzed.com/cbV2/ClientLoader.swf" ||
	  	clientObj.referrer == "http://www.chatbuzzed.com/cbV2/Client.swf" || clientObj.referrer == "http://chatbuzzed.com/cbV2/Client.swf") {
		application.acceptConnection(clientObj);
	} else {
		application.rejectConnection(clientObj);
		return;
	}
	
	trace("Status: " + status);
	if(status == 1) {
		this.addNewUser(clientObj);
	} else {
		clientObj.serv = this.gatewayconn.getService("ChatBuzzed", new AMFPHPResult(clientObj));
	}
}

application.addNewUser = function(client) {
	client._id = this.uID;
	client._status = "newUser";
	this.newUsers[client._id] = client;
	client.call("onUserID",null,client._id);
	client.call("onTotalUsersOnline",null,this.getTotalUsers());
	this.uID++;
}
application.removeNewUser = function(client) {
	delete this.newUsers[client];
}

application.getTotalUsers = function() {
	trace("#getTotalUsers");
	var totalUsers = this.getNumNewUsers();
	trace("New users: " + totalUsers);
	for(var n in this.schoolHandler.schools) {
		totalUsers += this.schoolHandler.getNumUsers(n).totalUsers;
	}
	trace("Total users: " + totalUsers);
	return totalUsers;
}

application.getNumNewUsers = function() {
	var numNewUsers = 0;
	trace(numNewUsers);
	for(var n in this.newUsers) {
		numNewUsers++;
	}
	return numNewUsers;
}
application.generateNickname = function(nick) {
	var num = Math.floor((Math.random() * 899) + 100);
	
	return nick + num;
}

application.onDisconnect = function(clientObj) {
	trace("Delete with status " + clientObj._status);
	if(clientObj._status == "newUser") {
		trace("delete new user");
		this.removeNewUser(clientObj._id);
	} else if(clientObj._status == "idle") {
		trace(clientObj._school);
		this.schoolHandler.getSchool(clientObj._school).removeIdleClient(clientObj);
	} else if(clientObj._status == "waiting") {
		this.schoolHandler.getSchool(clientObj._school).removeWaitingClient(clientObj);
	} else if(clientObj._status == "chatting") {
		this.schoolHandler.getSchool(clientObj._school).removeChatRoom(clientObj._roomID);
		this.schoolHandler.getSchool(clientObj._school).findPosMatch(clientObj._chattingLast);
		clientObj._chattingLast.call("onStopChatting",null,clientObj._nickname);
	}
}

Client.prototype.setProperties = function(client) {
	this._admin = client.admin;
	this._mirror = client.mirror;
}
Client.prototype.getSchoolInfo = function(school) {
	this.call("onSpecUsersOnline",null,application.schoolHandler.getNumUsers(school));
}
Client.prototype.getTotalUsers = function() {
	this.call("onTotalUsersOnline",null,application.getTotalUsers());
}

Client.prototype.startChatting = function(param) {
	trace("#Start Chattting");
	this._id = param.id;
	application.removeNewUser(this._id);
	
	this._school = param.school;
	trace(this._mirror);
	if(this._mirror == "cb") {
		this._nickname = application.generateNickname(param.nickname);
	} else {
		this._nickname = param.nickname;
	}
	this._faculty = param.faculty;
	this._residence = param.residence;
	application.schoolHandler.addClientTo(param.school,this);
	trace(this._school);
	this.call("onNewNickname",null,this._nickname,this._mirror);
	this.call("onSpecUsersOnline",null,application.schoolHandler.getNumUsers(this._school));
}
Client.prototype.onStart = function() {
	application.removeNewUser(this);
	application.schoolHandler.getSchool(this._school).onStart(this);
}
Client.prototype.onStop = function() {
	application.schoolHandler.getSchool(this._school).onStop(this);
}
Client.prototype.onNext = function() {
	application.schoolHandler.getSchool(this._school).onNext(this);
}
Client.prototype.onTyping = function() {
	application.schoolHandler.getSchool(this._school).onTyping(this);
}
Client.prototype.onCameraRefresh = function() {
	application.schoolHandler.getSchool(this._school).onCameraRefresh(this);
}

Client.prototype.onBanned = function(client) {
	if(this._admin) {
		application.schoolHandler.getSchool(this._school).onBanned(client);
	}
}
Client.prototype.onKicked = function(client) {
	if(this._admin) {
		application.schoolHandler.getSchool(this._school).onKicked(client);
	}
}

Client.prototype.onMessage = function(_message) {
	trace(_message);
	trace(this._status);
	if(this._status == "chatting") {
		trace("Send Message.");
		this._chattingLast.call("onMessage",null,_message,this._nickname);
		this.call("onMessage",null,_message,this._nickname);
	}
}